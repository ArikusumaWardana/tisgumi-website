// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  admin
  superadmin
}

enum Status {
  active
  inactive
}

enum InvoiceStatus {
  lunas
  belum_lunas
}

// Model for Users
model User {
  id         BigInt    @id @default(autoincrement())
  code       String    @unique @db.VarChar(50)
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  phone      String    @db.VarChar(20)
  password   String    @db.VarChar(255)
  role       Role      @default(admin)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  auth_sessions    Session[]
  invoices_created Invoice[] @relation("created_by_user_id")

  @@map("users")
}

// Model for Session
model Session {
  id             String @id @unique
  user_id        BigInt
  active_expires BigInt
  idle_expires   BigInt

  user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

// Model for Categories
model Categories {
  id         BigInt    @id @default(autoincrement())
  code       String    @unique @db.VarChar(50)
  name       String    @db.VarChar(100)
  status     Status    @default(active)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  Product Product[]

  @@map("categories")
}

// Model for Product
model Product {
  id            BigInt    @id @default(autoincrement())
  code          String    @unique @db.VarChar(50)
  name          String    @db.VarChar(100)
  description   String?   @db.Text
  default_price Int       @db.Integer
  status        Status    @default(active)
  category_id   BigInt
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  category      Categories             @relation(fields: [category_id], references: [id], onDelete: Cascade)
  invoice_items InvoiceItem[]
  custom_prices CustomProductPricing[]

  @@map("products")
}

// Model for Customer
model Customer {
  id         BigInt    @id @default(autoincrement())
  code       String    @unique @db.VarChar(50)
  name       String    @db.VarChar(100)
  phone      String    @db.VarChar(20)
  status     Status    @default(active)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  invoices      Invoice[]
  custom_prices CustomProductPricing[]

  @@map("customers")
}

// Model for Invoice
model Invoice {
  id                 BigInt        @id @default(autoincrement())
  code               String        @unique @db.VarChar(50)
  name               String        @db.VarChar(100)
  customer_id        BigInt
  created_by_user_id BigInt
  show_price         Boolean       @default(true)
  status             InvoiceStatus @default(lunas)
  file_location      String[]
  created_at         DateTime      @default(now())
  updated_at         DateTime      @updatedAt
  deleted_at         DateTime?

  customer        Customer      @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  created_by_user User          @relation("created_by_user_id", fields: [created_by_user_id], references: [id])
  invoice_items   InvoiceItem[]

  @@map("invoices")
}

// Model for InvoiceItem
model InvoiceItem {
  id            BigInt    @id @default(autoincrement())
  code          String    @unique @db.VarChar(50)
  invoice_id    BigInt
  product_id    BigInt
  quantity      Int       @db.Integer
  price_at_time Int       @db.Integer
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  invoice Invoice @relation(fields: [invoice_id], references: [id], onDelete: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("invoice_items")
}

// Model for CustomProductPricing
model CustomProductPricing {
  id           BigInt    @id @default(autoincrement())
  code         String    @unique @db.VarChar(50)
  customer_id  BigInt
  product_id   BigInt
  custom_price Int       @db.Integer
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?

  customer Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  product  Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("custom_product_pricings")
}
